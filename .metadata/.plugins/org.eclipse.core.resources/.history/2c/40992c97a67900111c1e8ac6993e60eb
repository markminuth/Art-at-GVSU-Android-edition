package edu.artAtGVSU;

import java.util.ArrayList;

import android.app.AlertDialog;
import android.content.Context;
import android.graphics.drawable.Drawable;

import com.google.android.maps.ItemizedOverlay;
import com.google.android.maps.OverlayItem;

public class TourPinpoints extends ItemizedOverlay<OverlayItem> {

	private ArrayList<OverlayItem> pinPoints = new ArrayList<OverlayItem>();
	private Drawable marker = null;
	private PopupPanel panel = new PopupPanel(R.layout.popup);
	private Context c;
	
	public TourPinpoints(Drawable defaultMarker) {
		super(boundCenter(defaultMarker));
		// TODO Auto-generated constructor stub
	}
	
	public TourPinpoints(Drawable m, Context context) {
		// TODO Auto-generated constructor stub
		this(m);
		c = context;
	}

	@Override
	protected OverlayItem createItem(int i) {
		// TODO Auto-generated method stub
		return pinPoints.get(i);
	}

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return pinPoints.size();
	}
	
	@Override
	protected boolean onTap(int index) {
	  OverlayItem item = pinPoints.get(index);
	  AlertDialog.Builder dialog = new AlertDialog.Builder(c);
	  dialog.setTitle(item.getTitle());
	  dialog.setMessage(item.getSnippet());
	  dialog.show();
	  return true;
	}
	
	public void createPinPoint(OverlayItem item){
		pinPoints.add(item);
		this.populate();
	}
	class PopupPanel {
	    View popup;
	    boolean isVisible=false;
	    
	    PopupPanel(int layout) {
	      ViewGroup parent=(ViewGroup)map.getParent();

	      popup=getLayoutInflater().inflate(layout, parent, false);
	                  
	      popup.setOnClickListener(new View.OnClickListener() {
	        public void onClick(View v) {
	          hide();
	        }
	      });
	    }
	    
	    View getView() {
	      return(popup);
	    }
	    
	    void show(boolean alignTop) {
	      RelativeLayout.LayoutParams lp=new RelativeLayout.LayoutParams(
	            RelativeLayout.LayoutParams.WRAP_CONTENT,
	            RelativeLayout.LayoutParams.WRAP_CONTENT
	      );
	      
	      if (alignTop) {
	        lp.addRule(RelativeLayout.ALIGN_PARENT_TOP);
	        lp.setMargins(0, 20, 0, 0);
	      }
	      else {
	        lp.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM);
	        lp.setMargins(0, 0, 0, 60);
	      }
	      
	      hide();
	      
	      ((ViewGroup)map.getParent()).addView(popup, lp);
	      isVisible=true;
	    }
	    
	    void hide() {
	      if (isVisible) {
	        isVisible=false;
	        ((ViewGroup)popup.getParent()).removeView(popup);
	      }
	    }
	  }

}
